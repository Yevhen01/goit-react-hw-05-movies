{"version":3,"file":"static/js/797.12e226b3.chunk.js","mappings":"4MAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uM,SCYrC,EAZkB,SAAHC,GAAuB,IAAjBC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MACvB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAACR,EAAS,CAACW,GAAE,WAAAC,OAAaN,GAAKI,UAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,SAKf,ECXaM,EAAOZ,EAAAA,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wBCY7B,EAVmB,SAAHC,GAAoB,IAAdS,EAAMT,EAANS,OACpB,OACEN,EAAAA,EAAAA,KAACK,EAAI,CAAAH,SACFI,EAAOC,KAAI,SAAAC,GAA6B,IAA1BV,EAAEU,EAAFV,GAAIW,EAAcD,EAAdC,eACjB,OAAOT,EAAAA,EAAAA,KAACU,EAAS,CAAUX,MAAOU,EAAgBX,GAAIA,GAA/BA,EACzB,KAGN,C,uKCuCMa,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iDAKzBiB,GAAQpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAasB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,sMAYrBoB,EAAYvB,EAAAA,GAAAA,OAAawB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,mVAoB/B,UA/EmB,WAAO,IAADsB,EACvBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCb,EAAMe,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAuCC,EAAAA,EAAAA,MAAiBC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAjDG,EAAWD,EAAA,GAAEE,EAAeF,EAAA,GAC7BG,EAAgC,QAA3BX,EAAGS,EAAYG,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,GAqB1C,OAnBAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAnC,GAAAoC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAW,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAElBC,EAAAA,EAAAA,IAAoBL,GAAa,KAAD,EAAzC,IAAJC,EAAIC,EAAAI,MACAC,QAAQC,OAAO,CAADN,EAAAE,KAAA,cAChB,IAAIK,MAAM,oBAAoB,KAAD,EAErCtB,EAAUc,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAExBS,QAAQC,IAAGV,EAAAQ,IACXG,EAAAA,GAAAA,MAAY,mBAAoB,CAAEC,SAAU,MAAQ,yBAAAZ,EAAAa,OAAA,GAAAhB,EAAA,kBAEvD,gBAXmBiB,GAAA,OAAAvD,EAAAwD,MAAA,KAAAC,UAAA,KAYN,KAAVzB,GAGJG,EAAeH,EACjB,GAAG,CAACA,KAGF0B,EAAAA,EAAAA,MAAAtD,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACwD,EAAAA,GAAM,CACLC,cAAe,CAAE5B,MAAO,IACxB6B,SAAU,SAAAlD,EAAAmD,GAA+B,IAA5B9B,EAAKrB,EAALqB,MAAW+B,EAASD,EAATC,UACtBhC,EAAgB,CAAEC,MAAAA,IAClB+B,GACF,EAAE1D,UAEFqD,EAAAA,EAAAA,MAAC5C,EAAU,CAAAT,SAAA,EACTF,EAAAA,EAAAA,KAACa,EAAK,CAACgD,KAAK,QAAQC,KAAK,OAAOC,YAAY,mBAC5C/D,EAAAA,EAAAA,KAACgB,EAAS,CAAC8C,KAAK,SAAQ5D,SAAC,gBAG5B8D,OAAOC,KAAK3D,GAAQsC,OAAS,IAAK5C,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CAAC5D,OAAQA,MAG7D,C,mMChDA6D,EAAAA,EAAAA,SAAAA,QAAyB,+BAGzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAoB,eAAAxE,GAAAoC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAmC,EAAA,OAAApC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAET2B,EAAAA,EAAAA,IAAU,uBAAuB,KAAD,EAAzC,OAARG,EAAQhC,EAAAI,KAAAJ,EAAAiC,OAAA,SAEPD,EAASjC,MAAI,OAAAC,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEpBS,QAAQC,IAAIV,EAAAQ,GAAM0B,SAAS,yBAAAlC,EAAAa,OAAA,GAAAhB,EAAA,kBAE9B,kBARgC,OAAAtC,EAAAwD,MAAA,KAAAC,UAAA,KAUpBb,EAAmB,eAAAjC,GAAAyB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuC,EAAO5C,GAAK,IAAAyC,EAAA,OAAApC,IAAAA,MAAA,SAAAwC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAEpB2B,EAAAA,EAAAA,IAAU,uBAAD/D,OAAwByB,IAAS,KAAD,EAAlD,OAARyC,EAAQI,EAAAhC,KAAAgC,EAAAH,OAAA,SACPD,EAASjC,MAAI,OAAAqC,EAAAnC,KAAA,EAAAmC,EAAA5B,GAAA4B,EAAA,SAEpB3B,QAAQC,IAAI0B,EAAA5B,GAAM0B,SAAS,yBAAAE,EAAAvB,OAAA,GAAAsB,EAAA,kBAE9B,gBAP+BrB,GAAA,OAAA5C,EAAA6C,MAAA,KAAAC,UAAA,KASnBqB,EAAe,eAAAhB,GAAA1B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0C,EAAOC,GAAO,IAAAP,EAAA,OAAApC,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAElB2B,EAAAA,EAAAA,IAAU,UAAD/D,OAAWyE,IAAW,KAAD,EAAvC,OAARP,EAAQQ,EAAApC,KAAAoC,EAAAP,OAAA,SACPD,EAASjC,MAAI,OAAAyC,EAAAvC,KAAA,EAAAuC,EAAAhC,GAAAgC,EAAA,SAEpB/B,QAAQC,IAAI8B,EAAAhC,GAAM0B,SAAS,yBAAAM,EAAA3B,OAAA,GAAAyB,EAAA,kBAE9B,gBAP2BG,GAAA,OAAApB,EAAAN,MAAA,KAAAC,UAAA,KASf0B,EAAa,eAAAC,GAAAhD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgD,EAAOL,GAAO,IAAAP,EAAA,OAAApC,IAAAA,MAAA,SAAAiD,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAEhB2B,EAAAA,EAAAA,IAAU,UAAD/D,OAAWyE,EAAO,aAAY,KAAD,EAA/C,OAARP,EAAQa,EAAAzC,KAAAyC,EAAAZ,OAAA,SACPD,EAASjC,MAAI,OAAA8C,EAAA5C,KAAA,EAAA4C,EAAArC,GAAAqC,EAAA,SAEpBpC,QAAQC,IAAImC,EAAArC,GAAM0B,SAAS,yBAAAW,EAAAhC,OAAA,GAAA+B,EAAA,kBAE9B,gBAPyBE,GAAA,OAAAH,EAAA5B,MAAA,KAAAC,UAAA,KASb+B,EAAe,eAAAC,GAAArD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqD,EAAOV,GAAO,IAAAP,EAAA,OAAApC,IAAAA,MAAA,SAAAsD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAjD,KAAA,EAAAiD,EAAAhD,KAAA,EAElB2B,EAAAA,EAAAA,IAAU,UAAD/D,OAAWyE,EAAO,aAAY,KAAD,EAA/C,OAARP,EAAQkB,EAAA9C,KAAA8C,EAAAjB,OAAA,SACPD,EAASjC,MAAI,OAAAmD,EAAAjD,KAAA,EAAAiD,EAAA1C,GAAA0C,EAAA,SAEpBzC,QAAQC,IAAIwC,EAAA1C,GAAM0B,SAAS,yBAAAgB,EAAArC,OAAA,GAAAoC,EAAA,kBAE9B,gBAP2BE,GAAA,OAAAH,EAAAjC,MAAA,KAAAC,UAAA,I","sources":["components/MoviesList/MovieItem/MovieItem.styled.js","components/MoviesList/MovieItem/MovieItem.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","service/apiService.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const MovieLink = styled(Link)`\n  margin: 0;\n  text-decoration: none;\n  color: #ffe6e6;\n  font-size: 16px;\n  font-weight: normal;\n  transition: color 250ms ease;\n\n  &:hover,\n  &:focus {\n    color: #e1afd1;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { MovieLink } from \"./MovieItem.styled\";\n\nconst MovieItem = ({ id, title }) => {\n  return (\n    <>\n      <li>\n        <MovieLink to={`/movies/${id}`}>\n          <h3>{title}</h3>\n        </MovieLink>\n      </li>\n    </>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  margin: 0;\n`;\n","import PropTypes from \"prop-types\";\nimport MovieItem from \"./MovieItem/MovieItem\";\nimport { List } from \"./MovieList.styled\";\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return <MovieItem key={id} title={original_title} id={id} />;\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useSearchParams } from \"react-router-dom\";\nimport { Formik, Field, Form } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { fetchMoviesBySearch } from \"../service/apiService\";\nimport MoviesList from \"../components/MoviesList/MoviesList\";\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searhParams, setSearchParams] = useSearchParams();\n  const query = searhParams.get(\"query\") ?? \"\";\n\n  useEffect(() => {\n    const getFetchMovies = async (searchQuery) => {\n      try {\n        const data = await fetchMoviesBySearch(searchQuery);\n        if (!data.results.length) {\n          throw new Error(\"No results found\");\n        }\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error(\"No results found\", { duration: 3000 });\n      }\n    };\n    if (query === \"\") {\n      return;\n    }\n    getFetchMovies(query);\n  }, [query]);\n\n  return (\n    <>\n      <Formik\n        initialValues={{ query: \"\" }}\n        onSubmit={({ query }, { resetForm }) => {\n          setSearchParams({ query });\n          resetForm();\n        }}\n      >\n        <SearchForm>\n          <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n          <SearchBtn type=\"submit\">Search</SearchBtn>\n        </SearchForm>\n      </Formik>\n      {Object.keys(movies).length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\nconst SearchForm = styled(Form)`\n  display: flex;\n  margin-top: 20px;\n`;\n\nconst Input = styled(Field)`\n  background-color: #ad88c6;\n  color: #ffe6e6;\n  font-weight: 700;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  margin-left: 10px;\n  padding: 10px;\n  border-radius: 8px;\n`;\n\nconst SearchBtn = styled.button`\n  padding: 10px 20px;\n  background-color: #ad88c6;\n  color: #ffe6e6;\n  font-weight: 700;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  margin-left: 10px;\n  cursor: pointer;\n  transition: all 250ms ease;\n  border-radius: 8px;\n\n  &:hover,\n  &:focus {\n    background-color: #ffe6e6;\n    color: #ad88c6;\n  }\n`;\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n// const API_KEY = process.env.REACT_APP_API_KEY;\nconst API_KEY = 'dd5ec7f2cdb8f7255f2534e3c61a571c';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day`);\n\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async (query) => {\n  try {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async (movieId) => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async (movieId) => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async (movieId) => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["MovieLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","id","title","_jsx","_Fragment","children","to","concat","List","movies","map","_ref2","original_title","MovieItem","SearchForm","Form","Input","Field","_templateObject2","SearchBtn","_templateObject3","_searhParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searhParams","setSearchParams","query","get","useEffect","getFetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","searchQuery","data","_context","prev","next","fetchMoviesBySearch","sent","results","length","Error","t0","console","log","toast","duration","stop","_x","apply","arguments","_jsxs","Formik","initialValues","onSubmit","_ref3","resetForm","name","type","placeholder","Object","keys","MoviesList","axios","api_key","fetchTrendingMoovies","response","abrupt","message","_callee2","_context2","fetchMoviesById","_callee3","movieId","_context3","_x2","fetchCastById","_ref4","_callee4","_context4","_x3","fetchReviewById","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}