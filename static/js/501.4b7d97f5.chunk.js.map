{"version":3,"file":"static/js/501.4b7d97f5.chunk.js","mappings":"sQAiBA,EAfgB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGF,EAAQG,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAII,KACJL,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,MAFGF,EAGJ,OAKf,E,UCuBA,EA/BoB,WAClB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCX,EAAOa,EAAA,GAAEE,EAAUF,EAAA,GAqB1B,IAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAlB,GAAAmB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOf,GAAE,IAAAgB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAENC,EAAAA,EAAAA,IAAgBrB,GAAI,KAAD,EAKlC,GALEgB,EAAIE,EAAAI,MACJL,EAASD,EAAKO,QAAQzB,KAAI,SAAAC,GAAsB,MAAQ,CAC5DC,GADmCD,EAAFC,GAEjCC,OAF2CF,EAANE,OAGrCC,QAHoDH,EAAPG,QAI9C,KACWsB,OAAO,CAADN,EAAAE,KAAA,cACV,IAAIK,MAAM,IAAI,KAAD,EAErBf,EAAWO,GAAQC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEnBS,EAAAA,GAAAA,MAAY,oBAAoB,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,mBAEnC,gBAfgBc,GAAA,OAAAnC,EAAAoC,MAAA,KAAAC,UAAA,KAgBjBnB,EAAYR,EACd,GAAG,CAACA,IACA4B,OAAOC,KAAKtC,GAAS6B,OAAS,EAChC,OACE5B,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAArC,UACED,EAAAA,EAAAA,KAACuC,EAAO,CAACxC,QAASA,KAG1B,C","sources":["components/MovieDetails/Reviews/Reviews.jsx","pages/ReviewsPage.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <div>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>{author}</p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport Reviews from \"../components/MovieDetails/Reviews/Reviews\";\nimport { fetchReviewById } from \"../service/apiService\";\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n\n  useEffect(() => {\n    const getCastInfo = async (id) => {\n      try {\n        const data = await fetchReviewById(id);\n        const result = data.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n        if (!result.length) {\n          throw new Error(\"\");\n        }\n        setReviews(result);\n      } catch (error) {\n        toast.error(\"No reviews found\");\n      }\n    };\n    getCastInfo(movieId);\n  }, [movieId]);\n  if (Object.keys(reviews).length > 0)\n    return (\n      <>\n        <Reviews reviews={reviews} />\n      </>\n    );\n};\n\nexport default ReviewsPage;\n"],"names":["_ref","reviews","_jsx","children","map","_ref2","id","author","content","_jsxs","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setReviews","useEffect","getCastInfo","_asyncToGenerator","_regeneratorRuntime","_callee","data","result","_context","prev","next","fetchReviewById","sent","results","length","Error","t0","toast","stop","_x","apply","arguments","Object","keys","_Fragment","Reviews"],"sourceRoot":""}