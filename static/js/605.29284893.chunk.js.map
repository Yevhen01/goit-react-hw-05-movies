{"version":3,"file":"static/js/605.29284893.chunk.js","mappings":"+TA8BA,EA3Ba,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KACd,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEIF,EAAAA,EAAAA,KAAA,MAAAE,SACGH,EAAKI,KAAI,SAAAC,GAAiC,IAA9BC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aACrB,OACEC,EAAAA,EAAAA,MAAA,MAAAN,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACES,MAAO,IACPC,IACEH,EAAY,sCAAAI,OAC8BJ,GACtCK,EAENC,IAAKP,KAEPN,EAAAA,EAAAA,KAAA,KAAAE,SAAII,MAVGD,EAab,OAKV,E,UCaA,EAnCiB,WACf,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BjB,EAAImB,EAAA,GAAEE,EAAOF,EAAA,GAyBpB,IAvBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAxB,GAAAyB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOpB,GAAE,IAAAqB,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAENC,EAAAA,EAAAA,IAAc1B,GAAI,KAAD,EAQlC,GARIqB,EAAIE,EAAAI,MACJL,EAASD,EAAK3B,KAAKI,KACvB,SAAAC,GAAoC,MAAQ,CAC1CE,KADKF,EAAJE,KAED2B,UAFgB7B,EAAT6B,UAGP1B,aAH8BH,EAAZG,aAIlBF,GAJkCD,EAAFC,GAKjC,KAES6B,OAAO,CAADN,EAAAE,KAAA,cACV,IAAIK,MAAM,kBAAkB,KAAD,EAEnCf,EAAQO,GAAQC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEhBS,EAAAA,GAAAA,MAAYT,EAAAQ,GAAME,SAAS,yBAAAV,EAAAW,OAAA,GAAAd,EAAA,mBAE9B,gBAlBgBe,GAAA,OAAA1C,EAAA2C,MAAA,KAAAC,UAAA,KAmBjBpB,EAAYR,EACd,GAAG,CAACA,IAEA6B,OAAOC,KAAK7C,GAAMmC,OAAS,EAC7B,OACElC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC6C,EAAI,CAAC9C,KAAMA,KAGpB,C","sources":["components/MovieDetails/Cast/Cast.jsx","pages/CastPage.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport defaultImg from \"../../../images/defaultImg.png\";\n\nconst Cast = ({ cast }) => {\n  return (\n    <>\n      {\n        <ul>\n          {cast.map(({ id, name, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  width={180}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/original${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                />\n                <p>{name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Cast from \"../components/MovieDetails/Cast/Cast\";\nimport { fetchCastById } from \"../service/apiService\";\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState({});\n\n  useEffect(() => {\n    const getCastInfo = async (id) => {\n      try {\n        const data = await fetchCastById(id);\n        const result = data.cast.map(\n          ({ name, character, profile_path, id }) => ({\n            name,\n            character,\n            profile_path,\n            id,\n          })\n        );\n        if (!result.length) {\n          throw new Error(\"Cast not found\");\n        }\n        setCast(result);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n    getCastInfo(movieId);\n  }, [movieId]);\n\n  if (Object.keys(cast).length > 0)\n    return (\n      <>\n        <Cast cast={cast} />\n      </>\n    );\n};\n\nexport default CastPage;\n"],"names":["_ref","cast","_jsx","_Fragment","children","map","_ref2","id","name","profile_path","_jsxs","width","src","concat","defaultImg","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","getCastInfo","_asyncToGenerator","_regeneratorRuntime","_callee","data","result","_context","prev","next","fetchCastById","sent","character","length","Error","t0","toast","message","stop","_x","apply","arguments","Object","keys","Cast"],"sourceRoot":""}